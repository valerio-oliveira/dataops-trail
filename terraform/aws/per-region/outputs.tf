output "current_region_id" {
  value = data.aws_region.current.id
}
output "current_region_name" {
  value = data.aws_region.current.name
}

output "vpc_id" {
  value = aws_vpc.prod_vpc.id
}
output "route_table_id" {
  value = aws_route_table.prod_route_table.id
}

output "vpc_cidr_block" {
  value = aws_vpc.prod_vpc.cidr_block
}

output "gateway_id" {
  value = aws_internet_gateway.prod_gateway.id
}

output "subnet_id" {
  value = aws_subnet.prod_subnet.id
}

# Export Terraform variable values to an Ansible var_file
resource "local_file" "tf_ansible_vars" {
  #  content  = <<-DOC
  content  = <<EOF
# Ansible vars_file containing variable values from Terraform.
# Generated by Terraform mgmt configuration.

%{for s in module.vm_database.*.public_ip~}
tf_${data.aws_region.current.name}_db_public_ip: ${s}
%{endfor~}
%{for s in module.vm_database.*.public_dns~}
tf_${data.aws_region.current.name}_db_public_dns: ${s}
%{endfor~}
%{for s in module.vm_database.*.private_ip~}
tf_${data.aws_region.current.name}_db_private_ip: ${s}
%{endfor~}
%{for s in module.vm_database.*.private_dns~}
tf_${data.aws_region.current.name}_db_private_dns: ${s}
%{endfor~}

EOF
  filename = format("%s/%s_%s.yml", var.ansible_directory, "tf_aws", data.aws_region.current.name)
}

resource "local_file" "hosts_region" {
  #  content  = <<-DOC
  content  = <<EOF
%{if(var.is_main_region == 1)}[postgresql-main]%{else}[postgresql-replica]%{endif}
%{for s in module.vm_database.*.public_ip~}
${s}
%{endfor~}
%{if(var.is_main_region == 1)}[postgresql-main-private]%{else}[postgresql-replica-private]%{endif}
%{for s in module.vm_database.*.private_ip~}
${s}
%{endfor~}
EOF
  filename = format("%s/inventories/hosts_%s", var.ansible_directory, data.aws_region.current.name)
}
